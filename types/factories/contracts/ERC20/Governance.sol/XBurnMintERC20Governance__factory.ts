/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  XBurnMintERC20Governance,
  XBurnMintERC20GovernanceInterface,
} from "../../../../contracts/ERC20/Governance.sol/XBurnMintERC20Governance";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "a",
        type: "address",
      },
    ],
    name: "addressToBytes",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "b",
        type: "bytes32",
      },
    ],
    name: "bytesToAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "chainId",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encoded",
        type: "bytes",
      },
    ],
    name: "decodeTransfer",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "tokenAddress",
            type: "bytes32",
          },
          {
            internalType: "uint16",
            name: "tokenChain",
            type: "uint16",
          },
          {
            internalType: "bytes32",
            name: "to",
            type: "bytes32",
          },
          {
            internalType: "uint16",
            name: "toChain",
            type: "uint16",
          },
        ],
        internalType: "struct XBurnMintERC20Structs.CrossChainPayload",
        name: "transfer",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "tokenAddress",
            type: "bytes32",
          },
          {
            internalType: "uint16",
            name: "tokenChain",
            type: "uint16",
          },
          {
            internalType: "bytes32",
            name: "to",
            type: "bytes32",
          },
          {
            internalType: "uint16",
            name: "toChain",
            type: "uint16",
          },
        ],
        internalType: "struct XBurnMintERC20Structs.CrossChainPayload",
        name: "transfer",
        type: "tuple",
      },
    ],
    name: "encodeTransfer",
    outputs: [
      {
        internalType: "bytes",
        name: "encoded",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "evmChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "finality",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "isTransferCompleted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "chainId",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "tokenContract",
        type: "bytes32",
      },
    ],
    name: "registerChain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "chainId_",
        type: "uint16",
      },
    ],
    name: "tokenContracts",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "finality",
        type: "uint8",
      },
    ],
    name: "updateFinality",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wormhole",
    outputs: [
      {
        internalType: "contract IWormhole",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611007806100206000396000f3fe608060405234801561001057600080fd5b50600436106101515760003560e01c806391d14854116100cd578063d547741f11610081578063dc02f45611610066578063dc02f45614610385578063ded8454a146103dd578063f7ee9998146103f757600080fd5b8063d547741f1461035f578063d95981981461037257600080fd5b8063a217fddf116100b2578063a217fddf14610321578063aa4efa5b14610329578063c599efdd1461034c57600080fd5b806391d14854146102d25780639a8a05921461030b57600080fd5b806364d42b1711610124578063739fc8d111610109578063739fc8d1146101f257806384acd1bb146102105780638d7a646b1461023557600080fd5b806364d42b17146101d757806365bb3ea7146101df57600080fd5b806301ffc9a714610156578063248a9ca31461017e5780632f2ff15d146101af57806336568abe146101c4575b600080fd5b610169610164366004610c2e565b61041b565b60405190151581526020015b60405180910390f35b6101a161018c366004610c58565b60009081526005602052604090206001015490565b604051908152602001610175565b6101c26101bd366004610c8d565b610452565b005b6101c26101d2366004610c8d565b61047c565b6004546101a1565b6101c26101ed366004610ccb565b61050d565b60005462010000900460ff1660405160ff9091168152602001610175565b6001546001600160a01b03165b6040516001600160a01b039091168152602001610175565b6102c5610243366004610d0b565b80516020808301516040808501516060868101516080880151845196870197909752928501939093527fffff00000000000000000000000000000000000000000000000000000000000060f091821b81168585015260628501929092529390931b90921660828201526084016040516020818303038152906040529050919050565b6040516101759190610de2565b6101696102e0366004610c8d565b60009182526005602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60005460405161ffff9091168152602001610175565b6101a1600081565b610169610337366004610c58565b60009081526002602052604090205460ff1690565b61021d61035a366004610c58565b61057c565b6101c261036d366004610c8d565b6105f2565b6101c2610380366004610df5565b610617565b610398610393366004610e18565b61068a565b6040805182518152602080840151908201528282015161ffff90811692820192909252606080840151908201526080928301519091169181019190915260a001610175565b6101a16103eb366004610ec9565b6001600160a01b031690565b6101a1610405366004610ee4565b61ffff1660009081526003602052604090205490565b60006001600160e01b03198216637965db0b60e01b148061044c57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60008281526005602052604090206001015461046d8161079f565b61047783836107a9565b505050565b6001600160a01b03811633146104ff5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c66000000000000000000000000000000000060648201526084015b60405180910390fd5b610509828261084b565b5050565b6105186000336102e0565b6105645760405162461bcd60e51b815260206004820152601560248201527f43616c6c6572206973206e6f7420612061646d696e000000000000000000000060448201526064016104f6565b61ffff91909116600090815260036020526040902055565b60007fffffffffffffffffffffffff00000000000000000000000000000000000000008216156105ee5760405162461bcd60e51b815260206004820152601360248201527f696e76616c69642045564d20616464726573730000000000000000000000000060448201526064016104f6565b5090565b60008281526005602052604090206001015461060d8161079f565b610477838361084b565b6106226000336102e0565b61066e5760405162461bcd60e51b815260206004820152601560248201527f43616c6c6572206973206e6f7420612061646d696e000000000000000000000060448201526064016104f6565b6000805462ff000019166201000060ff84160217905550565b50565b6040805160a0810182526000808252602082018190529181018290526060810182905260808101829052906106bf83826108ce565b82526106cc602082610f15565b90506106d88382610934565b6020808401919091526106eb9082610f15565b90506106f78382610991565b61ffff16604083015261070b600282610f15565b90506107178382610934565b6060830152610727602082610f15565b90506107338382610991565b61ffff166080830152610747600282610f15565b9050808351146107995760405162461bcd60e51b815260206004820152601060248201527f696e76616c6964205472616e736665720000000000000000000000000000000060448201526064016104f6565b50919050565b61068781336109f7565b60008281526005602090815260408083206001600160a01b038516845290915290205460ff166105095760008281526005602090815260408083206001600160a01b03851684529091529020805460ff191660011790556108073390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60008281526005602090815260408083206001600160a01b038516845290915290205460ff16156105095760008281526005602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60006108db826020610f15565b8351101561092b5760405162461bcd60e51b815260206004820152601560248201527f746f55696e743235365f6f75744f66426f756e6473000000000000000000000060448201526064016104f6565b50016020015190565b6000610941826020610f15565b8351101561092b5760405162461bcd60e51b815260206004820152601560248201527f746f427974657333325f6f75744f66426f756e6473000000000000000000000060448201526064016104f6565b600061099e826002610f15565b835110156109ee5760405162461bcd60e51b815260206004820152601460248201527f746f55696e7431365f6f75744f66426f756e647300000000000000000000000060448201526064016104f6565b50016002015190565b60008281526005602090815260408083206001600160a01b038516845290915290205460ff1661050957610a2a81610a6c565b610a35836020610a7e565b604051602001610a46929190610f2d565b60408051601f198184030181529082905262461bcd60e51b82526104f691600401610de2565b606061044c6001600160a01b03831660145b60606000610a8d836002610fae565b610a98906002610f15565b67ffffffffffffffff811115610ab057610ab0610cf5565b6040519080825280601f01601f191660200182016040528015610ada576020820181803683370190505b509050600360fc1b81600081518110610af557610af5610fcd565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110610b2457610b24610fcd565b60200101906001600160f81b031916908160001a9053506000610b48846002610fae565b610b53906001610f15565b90505b6001811115610bd8577f303132333435363738396162636465660000000000000000000000000000000085600f1660108110610b9457610b94610fcd565b1a60f81b828281518110610baa57610baa610fcd565b60200101906001600160f81b031916908160001a90535060049490941c93610bd181610fe3565b9050610b56565b508315610c275760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016104f6565b9392505050565b600060208284031215610c4057600080fd5b81356001600160e01b031981168114610c2757600080fd5b600060208284031215610c6a57600080fd5b5035919050565b80356001600160a01b0381168114610c8857600080fd5b919050565b60008060408385031215610ca057600080fd5b82359150610cb060208401610c71565b90509250929050565b803561ffff81168114610c8857600080fd5b60008060408385031215610cde57600080fd5b610ce783610cb9565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600060a08284031215610d1d57600080fd5b60405160a0810181811067ffffffffffffffff82111715610d4057610d40610cf5565b80604052508235815260208301356020820152610d5f60408401610cb9565b604082015260608301356060820152610d7a60808401610cb9565b60808201529392505050565b60005b83811015610da1578181015183820152602001610d89565b83811115610db0576000848401525b50505050565b60008151808452610dce816020860160208601610d86565b601f01601f19169290920160200192915050565b602081526000610c276020830184610db6565b600060208284031215610e0757600080fd5b813560ff81168114610c2757600080fd5b600060208284031215610e2a57600080fd5b813567ffffffffffffffff80821115610e4257600080fd5b818401915084601f830112610e5657600080fd5b813581811115610e6857610e68610cf5565b604051601f8201601f19908116603f01168101908382118183101715610e9057610e90610cf5565b81604052828152876020848701011115610ea957600080fd5b826020860160208301376000928101602001929092525095945050505050565b600060208284031215610edb57600080fd5b610c2782610c71565b600060208284031215610ef657600080fd5b610c2782610cb9565b634e487b7160e01b600052601160045260246000fd5b60008219821115610f2857610f28610eff565b500190565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351610f65816017850160208801610d86565b7f206973206d697373696e6720726f6c65200000000000000000000000000000006017918401918201528351610fa2816028840160208801610d86565b01602801949350505050565b6000816000190483118215151615610fc857610fc8610eff565b500290565b634e487b7160e01b600052603260045260246000fd5b600081610ff257610ff2610eff565b50600019019056fea164736f6c634300080a000a";

type XBurnMintERC20GovernanceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: XBurnMintERC20GovernanceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class XBurnMintERC20Governance__factory extends ContractFactory {
  constructor(...args: XBurnMintERC20GovernanceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<XBurnMintERC20Governance> {
    return super.deploy(overrides || {}) as Promise<XBurnMintERC20Governance>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): XBurnMintERC20Governance {
    return super.attach(address) as XBurnMintERC20Governance;
  }
  override connect(signer: Signer): XBurnMintERC20Governance__factory {
    return super.connect(signer) as XBurnMintERC20Governance__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): XBurnMintERC20GovernanceInterface {
    return new utils.Interface(_abi) as XBurnMintERC20GovernanceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): XBurnMintERC20Governance {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as XBurnMintERC20Governance;
  }
}
